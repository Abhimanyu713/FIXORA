{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\manis\\\\Desktop\\\\startup\\\\FIXORA\\\\frontend\\\\src\\\\pages\\\\Settings\\\\component\\\\NotificationTab.jsx\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst styles = {\n  card: {\n    backgroundColor: \"#ffffff\",\n    borderRadius: \"0.5rem\",\n    padding: \"1.5rem\",\n    boxShadow: \"0 1px 2px rgba(0,0,0,0.05)\",\n    border: \"1px solid #e5e7eb\"\n  },\n  heading: {\n    fontSize: \"1.125rem\",\n    fontWeight: 600,\n    marginBottom: \"1rem\"\n  },\n  toggleRow: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    padding: \"0.75rem 0\",\n    borderBottom: \"1px solid #f3f4f6\"\n  },\n  labelContainer: {\n    display: \"flex\",\n    flexDirection: \"column\"\n  },\n  label: {\n    fontWeight: 500,\n    marginBottom: \"0.25rem\"\n  },\n  description: {\n    fontSize: \"0.875rem\",\n    color: \"#4b5563\"\n  },\n  toggleWrapper: {\n    position: \"relative\",\n    display: \"inline-flex\",\n    alignItems: \"center\",\n    cursor: \"pointer\"\n  },\n  toggleTrack: enabled => ({\n    width: \"2.75rem\",\n    height: \"1.5rem\",\n    borderRadius: \"9999px\",\n    backgroundColor: enabled ? \"#2563eb\" : \"#e5e7eb\",\n    transition: \"background-color 0.2s\",\n    position: \"relative\"\n  }),\n  toggleThumb: enabled => ({\n    width: \"1rem\",\n    height: \"1rem\",\n    borderRadius: \"9999px\",\n    backgroundColor: \"#ffffff\",\n    transform: enabled ? \"translateX(1.5rem)\" : \"translateX(0.25rem)\",\n    transition: \"transform 0.2s\",\n    position: \"absolute\",\n    top: \"0.125rem\"\n  }),\n  srOnly: {\n    position: \"absolute\",\n    width: \"1px\",\n    height: \"1px\",\n    padding: 0,\n    margin: \"-1px\",\n    overflow: \"hidden\",\n    clip: \"rect(0,0,0,0)\",\n    whiteSpace: \"nowrap\",\n    borderWidth: 0\n  }\n};\nconst NotificationsTab = ({\n  notifications,\n  setNotifications\n}) => {\n  const handleChange = (field, value) => {\n    setNotifications(prev => ({\n      ...prev,\n      [field]: value\n    }));\n  };\n  const renderToggle = (label, desc, field) => /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.toggleRow,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.labelContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        style: styles.label,\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        style: styles.description,\n        children: desc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      style: styles.toggleWrapper,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: notifications[field],\n        onChange: e => handleChange(field, e.target.checked),\n        style: styles.srOnly\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.toggleTrack(notifications[field]),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.toggleThumb(notifications[field])\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginBottom: \"1.5rem\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.card,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        style: styles.heading,\n        children: \"Notification Preferences\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), renderToggle(\"Email Notifications\", \"Receive notifications via email\", \"emailNotifications\"), renderToggle(\"Push Notifications\", \"Receive push notifications in your browser\", \"pushNotifications\"), renderToggle(\"SMS Notifications\", \"Receive important notifications via SMS\", \"smsNotifications\"), renderToggle(\"Task Reminders\", \"Get reminders for upcoming tasks\", \"taskReminders\"), renderToggle(\"Project Updates\", \"Stay updated on project progress\", \"projectUpdates\"), renderToggle(\"Team Mentions\", \"Get notified when mentioned by team members\", \"teamMentions\"), renderToggle(\"Marketing Emails\", \"Receive product updates and tips\", \"marketingEmails\")]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n};\n_c = NotificationsTab;\nexport default NotificationsTab;\nvar _c;\n$RefreshReg$(_c, \"NotificationsTab\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","styles","card","backgroundColor","borderRadius","padding","boxShadow","border","heading","fontSize","fontWeight","marginBottom","toggleRow","display","alignItems","justifyContent","borderBottom","labelContainer","flexDirection","label","description","color","toggleWrapper","position","cursor","toggleTrack","enabled","width","height","transition","toggleThumb","transform","top","srOnly","margin","overflow","clip","whiteSpace","borderWidth","NotificationsTab","notifications","setNotifications","handleChange","field","value","prev","renderToggle","desc","style","children","fileName","_jsxFileName","lineNumber","columnNumber","type","checked","onChange","e","target","_c","$RefreshReg$"],"sources":["C:/Users/manis/Desktop/startup/FIXORA/frontend/src/pages/Settings/component/NotificationTab.jsx"],"sourcesContent":["import React from \"react\";\r\n\r\nconst styles = {\r\n  card: {\r\n    backgroundColor: \"#ffffff\",\r\n    borderRadius: \"0.5rem\",\r\n    padding: \"1.5rem\",\r\n    boxShadow: \"0 1px 2px rgba(0,0,0,0.05)\",\r\n    border: \"1px solid #e5e7eb\",\r\n  },\r\n  heading: {\r\n    fontSize: \"1.125rem\",\r\n    fontWeight: 600,\r\n    marginBottom: \"1rem\",\r\n  },\r\n  toggleRow: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n    padding: \"0.75rem 0\",\r\n    borderBottom: \"1px solid #f3f4f6\",\r\n  },\r\n  labelContainer: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  label: {\r\n    fontWeight: 500,\r\n    marginBottom: \"0.25rem\",\r\n  },\r\n  description: {\r\n    fontSize: \"0.875rem\",\r\n    color: \"#4b5563\",\r\n  },\r\n  toggleWrapper: {\r\n    position: \"relative\",\r\n    display: \"inline-flex\",\r\n    alignItems: \"center\",\r\n    cursor: \"pointer\",\r\n  },\r\n  toggleTrack: (enabled) => ({\r\n    width: \"2.75rem\",\r\n    height: \"1.5rem\",\r\n    borderRadius: \"9999px\",\r\n    backgroundColor: enabled ? \"#2563eb\" : \"#e5e7eb\",\r\n    transition: \"background-color 0.2s\",\r\n    position: \"relative\",\r\n  }),\r\n  toggleThumb: (enabled) => ({\r\n    width: \"1rem\",\r\n    height: \"1rem\",\r\n    borderRadius: \"9999px\",\r\n    backgroundColor: \"#ffffff\",\r\n    transform: enabled ? \"translateX(1.5rem)\" : \"translateX(0.25rem)\",\r\n    transition: \"transform 0.2s\",\r\n    position: \"absolute\",\r\n    top: \"0.125rem\",\r\n  }),\r\n  srOnly: {\r\n    position: \"absolute\",\r\n    width: \"1px\",\r\n    height: \"1px\",\r\n    padding: 0,\r\n    margin: \"-1px\",\r\n    overflow: \"hidden\",\r\n    clip: \"rect(0,0,0,0)\",\r\n    whiteSpace: \"nowrap\",\r\n    borderWidth: 0,\r\n  },\r\n};\r\n\r\nconst NotificationsTab = ({ notifications, setNotifications }) => {\r\n  const handleChange = (field, value) => {\r\n    setNotifications((prev) => ({ ...prev, [field]: value }));\r\n  };\r\n\r\n  const renderToggle = (label, desc, field) => (\r\n    <div style={styles.toggleRow}>\r\n      <div style={styles.labelContainer}>\r\n        <span style={styles.label}>{label}</span>\r\n        <span style={styles.description}>{desc}</span>\r\n      </div>\r\n      <label style={styles.toggleWrapper}>\r\n        <input\r\n          type=\"checkbox\"\r\n          checked={notifications[field]}\r\n          onChange={(e) => handleChange(field, e.target.checked)}\r\n          style={styles.srOnly}\r\n        />\r\n        <div style={styles.toggleTrack(notifications[field])}>\r\n          <div style={styles.toggleThumb(notifications[field])}></div>\r\n        </div>\r\n      </label>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div style={{ marginBottom: \"1.5rem\" }}>\r\n      <div style={styles.card}>\r\n        <h3 style={styles.heading}>Notification Preferences</h3>\r\n        {renderToggle(\r\n          \"Email Notifications\",\r\n          \"Receive notifications via email\",\r\n          \"emailNotifications\"\r\n        )}\r\n        {renderToggle(\r\n          \"Push Notifications\",\r\n          \"Receive push notifications in your browser\",\r\n          \"pushNotifications\"\r\n        )}\r\n        {renderToggle(\r\n          \"SMS Notifications\",\r\n          \"Receive important notifications via SMS\",\r\n          \"smsNotifications\"\r\n        )}\r\n        {renderToggle(\r\n          \"Task Reminders\",\r\n          \"Get reminders for upcoming tasks\",\r\n          \"taskReminders\"\r\n        )}\r\n        {renderToggle(\r\n          \"Project Updates\",\r\n          \"Stay updated on project progress\",\r\n          \"projectUpdates\"\r\n        )}\r\n        {renderToggle(\r\n          \"Team Mentions\",\r\n          \"Get notified when mentioned by team members\",\r\n          \"teamMentions\"\r\n        )}\r\n        {renderToggle(\r\n          \"Marketing Emails\",\r\n          \"Receive product updates and tips\",\r\n          \"marketingEmails\"\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotificationsTab;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}