{"ast":null,"code":"// import React, { useState, useEffect, useRef } from 'react';\n// import { Search, X, User, GraduationCap, MapPin, Filter } from 'lucide-react';\n\n// const SearchBar = ({ isOpen, onClose, onSearch }) => {\n//   const [searchQuery, setSearchQuery] = useState('');\n//   const [searchResults, setSearchResults] = useState([]);\n//   const [isLoading, setIsLoading] = useState(false);\n//   const [selectedSkills, setSelectedSkills] = useState([]);\n//   const [searchMode, setSearchMode] = useState('all'); // 'all', 'name', 'skills'\n//   const searchInputRef = useRef(null);\n\n//   const commonSkills = [\n//     // Programming Languages\n//     'JavaScript', 'Python', 'Java', 'C#', 'C++', 'Go', 'Kotlin', 'Swift', 'TypeScript',\n\n//     // Web Development\n//     'React', 'Node.js', 'Vue.js', 'Angular', 'Next.js', 'Full Stack Development', \n//     'Frontend Development', 'Backend Development', 'Web Development',\n\n//     // Mobile Development\n//     'Mobile Development', 'React Native', 'iOS Development', 'Android Development', \n//     'Flutter', 'Cross-platform',\n\n//     // AI & Machine Learning\n//     'Machine Learning', 'Artificial Intelligence', 'Deep Learning', 'Computer Vision',\n//     'Natural Language Processing', 'Neural Networks', 'TensorFlow', 'PyTorch',\n\n//     // Data & Analytics\n//     'Data Science', 'Data Analysis', 'Big Data', 'Statistics', 'R Programming',\n//     'Data Engineering', 'Business Intelligence',\n\n//     // Cloud & DevOps\n//     'Cloud Computing', 'AWS', 'Azure', 'Google Cloud Platform', 'DevOps', 'Docker',\n//     'Kubernetes', 'CI/CD', 'Infrastructure as Code',\n\n//     // Database & Data\n//     'Database', 'Database Design', 'SQL', 'NoSQL', 'PostgreSQL', 'MongoDB', 'MySQL',\n//     'Data Modeling', 'ETL', 'Data Warehousing',\n\n//     // Design & UX\n//     'UI/UX Design', 'UI/UX', 'Figma', 'Adobe Creative Suite', 'User Research',\n//     'Prototyping', 'Design Systems',\n\n//     // Security & Emerging Tech\n//     'Cybersecurity', 'Network Security', 'Blockchain', 'Smart Contracts', 'Game Development',\n//     'Unity', 'Unreal Engine', 'Quantum Computing'\n//   ];\n\n//   useEffect(() => {\n//     if (isOpen && searchInputRef.current) {\n//       searchInputRef.current.focus();\n//     }\n//   }, [isOpen]);\n\n//   useEffect(() => {\n//     const performSearch = async () => {\n//       if (searchQuery.trim() || selectedSkills.length > 0) {\n//         setIsLoading(true);\n//         try {\n//           const params = new URLSearchParams();\n\n//           // If search query is provided, treat it as a general search (name + skills)\n//           if (searchQuery.trim()) {\n//             params.append('query', searchQuery.trim());\n//           }\n\n//           // Add selected skills as additional filters\n//           if (selectedSkills.length > 0) {\n//             params.append('skills', selectedSkills.join(','));\n//           }\n\n//           const response = await fetch(`/api/mentors/search?${params}`);\n//           const data = await response.json();\n//           setSearchResults(data);\n//         } catch (error) {\n//           console.error('Search error:', error);\n//           setSearchResults([]);\n//         } finally {\n//           setIsLoading(false);\n//         }\n//       } else {\n//         setSearchResults([]);\n//       }\n//     };\n\n//     const debounceTimer = setTimeout(performSearch, 300);\n//     return () => clearTimeout(debounceTimer);\n//   }, [searchQuery, selectedSkills]);\n\n//   const handleSkillToggle = (skill) => {\n//     setSelectedSkills(prev => \n//       prev.includes(skill) \n//         ? prev.filter(s => s !== skill)\n//         : [...prev, skill]\n//     );\n//   };\n\n//   const handleSearchInputChange = (e) => {\n//     const value = e.target.value;\n//     setSearchQuery(value);\n\n//     // Auto-detect if user is typing a skill name\n//     const isTypingSkill = commonSkills.some(skill => \n//       skill.toLowerCase().includes(value.toLowerCase())\n//     );\n\n//     if (value.trim() && isTypingSkill) {\n//       setSearchMode('skills');\n//     } else if (value.trim()) {\n//       setSearchMode('all');\n//     }\n\n//     // Clear results when clearing search\n//     if (!value.trim()) {\n//       setSearchResults([]);\n//     }\n//   };\n\n//   const handleResultClick = (mentor) => {\n//     onSearch(mentor);\n//     onClose();\n//   };\n\n//   const handleKeyDown = (e) => {\n//     if (e.key === 'Escape') {\n//       onClose();\n//     }\n//   };\n\n//   const clearSearch = () => {\n//     setSearchQuery('');\n//     setSelectedSkills([]);\n//     setSearchResults([]);\n//   };\n\n//   if (!isOpen) return null;\n\n//   return (\n//     <div className=\"fixed inset-0 bg-black bg-opacity-50 z-50 flex items-start justify-center pt-20\">\n//       <div className=\"bg-white rounded-lg shadow-2xl w-full max-w-4xl mx-4 max-h-[80vh] overflow-hidden\">\n//         {/* Search Header */}\n//         <div className=\"p-6 border-b border-gray-200\">\n//           <div className=\"flex items-center justify-between mb-4\">\n//             <h2 className=\"text-2xl font-bold text-gray-900\">Search Mentors</h2>\n//             <button\n//               onClick={onClose}\n//               className=\"p-2 hover:bg-gray-100 rounded-full transition-colors\"\n//             >\n//               <X className=\"w-6 h-6 text-gray-600\" />\n//             </button>\n//           </div>\n\n//           {/* Search Input */}\n//           <div className=\"relative\">\n//             <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-5 h-5\" />\n//             <input\n//               ref={searchInputRef}\n//               type=\"text\"\n//               placeholder=\"Search mentors by name or skills (e.g., Machine Learning, React, Python)...\"\n//               value={searchQuery}\n//               onChange={handleSearchInputChange}\n//               onKeyDown={handleKeyDown}\n//               className=\"w-full pl-10 pr-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent text-lg\"\n//             />\n\n//             {searchQuery && (\n//               <button\n//                 onClick={clearSearch}\n//                 className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-400 hover:text-gray-600\"\n//               >\n//                 <X className=\"w-4 h-4\" />\n//               </button>\n//             )}\n//           </div>\n\n//           {/* Search Mode Indicator */}\n//           {searchQuery && (\n//             <div className=\"mt-2 flex items-center gap-2 text-sm text-gray-600\">\n//               <Filter className=\"w-4 h-4\" />\n//               <span>\n//                 {searchMode === 'skills' \n//                   ? `Searching for mentors with skills matching \"${searchQuery}\"`\n//                   : `Searching for mentors with name or skills matching \"${searchQuery}\"`\n//                 }\n//               </span>\n//             </div>\n//           )}\n//         </div>\n\n//         {/* Skills Filter */}\n//         <div className=\"p-6 border-b border-gray-200\">\n//           <div className=\"flex items-center justify-between mb-3\">\n//             <h3 className=\"text-lg font-semibold text-gray-900\">Quick Filter by Skills</h3>\n//             {selectedSkills.length > 0 && (\n//               <button\n//                 onClick={() => setSelectedSkills([])}\n//                 className=\"text-sm text-blue-600 hover:text-blue-800\"\n//               >\n//                 Clear all\n//               </button>\n//             )}\n//           </div>\n//           <div className=\"flex flex-wrap gap-2\">\n//             {commonSkills.map((skill) => (\n//               <button\n//                 key={skill}\n//                 onClick={() => handleSkillToggle(skill)}\n//                 className={`px-3 py-2 rounded-full text-sm font-medium transition-colors ${\n//                   selectedSkills.includes(skill)\n//                     ? 'bg-blue-600 text-white'\n//                     : 'bg-gray-100 text-gray-700 hover:bg-gray-200'\n//                 }`}\n//               >\n//                 {skill}\n//               </button>\n//             ))}\n//           </div>\n//         </div>\n\n//         {/* Search Results */}\n//         <div className=\"flex-1 overflow-y-auto p-6\">\n//           {isLoading ? (\n//             <div className=\"flex items-center justify-center py-8\">\n//               <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"></div>\n//             </div>\n//           ) : searchResults.length > 0 ? (\n//             <div className=\"space-y-4\">\n//               <div className=\"flex items-center justify-between\">\n//                 <h3 className=\"text-lg font-semibold text-gray-900\">\n//                   Found {searchResults.length} mentor(s)\n//                 </h3>\n//                 {(searchQuery || selectedSkills.length > 0) && (\n//                   <div className=\"text-sm text-gray-600\">\n//                     {searchQuery && <span>Search: \"{searchQuery}\"</span>}\n//                     {searchQuery && selectedSkills.length > 0 && <span> + </span>}\n//                     {selectedSkills.length > 0 && (\n//                       <span>Skills: {selectedSkills.join(', ')}</span>\n//                     )}\n//                   </div>\n//                 )}\n//               </div>\n//               {searchResults.map((mentor) => (\n//                 <div\n//                   key={mentor._id}\n//                   onClick={() => handleResultClick(mentor)}\n//                   className=\"p-4 border border-gray-200 rounded-lg hover:bg-gray-50 cursor-pointer transition-colors\"\n//                 >\n//                   <div className=\"flex items-start gap-4\">\n//                     <div className=\"w-12 h-12 bg-blue-100 rounded-full flex items-center justify-center flex-shrink-0\">\n//                       <User className=\"w-6 h-6 text-blue-600\" />\n//                     </div>\n//                     <div className=\"flex-1 min-w-0\">\n//                       <h4 className=\"text-lg font-semibold text-gray-900 mb-1\">\n//                         {mentor.name}\n//                       </h4>\n//                       <div className=\"flex items-center gap-4 text-sm text-gray-600 mb-2\">\n//                         <div className=\"flex items-center gap-1\">\n//                           <GraduationCap className=\"w-4 h-4\" />\n//                           {mentor.education}\n//                         </div>\n//                         <div className=\"flex items-center gap-1\">\n//                           <MapPin className=\"w-4 h-4\" />\n//                           {mentor.college}\n//                         </div>\n//                       </div>\n//                       <div className=\"flex flex-wrap gap-2\">\n//                         {mentor.areasOfProficiency.slice(0, 5).map((skill, index) => {\n//                           const isMatchingSkill = (searchQuery && skill.toLowerCase().includes(searchQuery.toLowerCase())) ||\n//                                                  selectedSkills.includes(skill);\n//                           return (\n//                             <span\n//                               key={index}\n//                               className={`px-2 py-1 text-xs rounded-full font-medium ${\n//                                 isMatchingSkill\n//                                   ? 'bg-green-100 text-green-800 border-2 border-green-300 shadow-sm'\n//                                   : 'bg-blue-100 text-blue-800'\n//                               }`}\n//                             >\n//                               {skill}\n//                               {isMatchingSkill && (\n//                                 <span className=\"ml-1 text-green-600\">✓</span>\n//                               )}\n//                             </span>\n//                           );\n//                         })}\n//                         {mentor.areasOfProficiency.length > 5 && (\n//                           <span className=\"px-2 py-1 bg-gray-100 text-gray-600 text-xs rounded-full\">\n//                             +{mentor.areasOfProficiency.length - 5} more\n//                           </span>\n//                         )}\n//                       </div>\n//                     </div>\n//                   </div>\n//                 </div>\n//               ))}\n//             </div>\n//           ) : (searchQuery.trim() || selectedSkills.length > 0) ? (\n//             <div className=\"text-center py-8\">\n//               <p className=\"text-gray-500 text-lg\">No mentors found matching your criteria</p>\n//               <p className=\"text-gray-400 text-sm mt-2\">\n//                 Try adjusting your search terms or skills. You can search by:\n//               </p>\n//               <ul className=\"text-gray-400 text-sm mt-2 space-y-1\">\n//                 <li>• Mentor names (e.g., \"Sarah\", \"Dr. Johnson\")</li>\n//                 <li>• Skills (e.g., \"Machine Learning\", \"React\", \"Python\")</li>\n//                 <li>• Use the skill filters below for more specific results</li>\n//               </ul>\n//             </div>\n//           ) : (\n//             <div className=\"text-center py-8\">\n//               <Search className=\"w-16 h-16 text-gray-300 mx-auto mb-4\" />\n//               <p className=\"text-gray-500 text-lg\">Start typing to search for mentors</p>\n//               <p className=\"text-gray-400 text-sm mt-2\">\n//                 Search by name, skills, or use the skill filters below\n//               </p>\n//               <div className=\"mt-4 p-4 bg-gray-50 rounded-lg max-w-md mx-auto\">\n//                 <p className=\"text-sm text-gray-600 mb-2\">Examples:</p>\n//                 <ul className=\"text-xs text-gray-500 space-y-1\">\n//                   <li>• Type \"Machine Learning\" to find ML experts</li>\n//                   <li>• Type \"React\" to find frontend developers</li>\n//                   <li>• Type \"Python\" to find Python developers</li>\n//                   <li>• Or click skill tags below for instant filtering</li>\n//                 </ul>\n//               </div>\n//             </div>\n//           )}\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default SearchBar;","map":{"version":3,"names":[],"sources":["C:/Users/manis/Desktop/startup/FIXORA/frontend/src/components/HomePage/SearchBar.jsx"],"sourcesContent":["// import React, { useState, useEffect, useRef } from 'react';\r\n// import { Search, X, User, GraduationCap, MapPin, Filter } from 'lucide-react';\r\n\r\n// const SearchBar = ({ isOpen, onClose, onSearch }) => {\r\n//   const [searchQuery, setSearchQuery] = useState('');\r\n//   const [searchResults, setSearchResults] = useState([]);\r\n//   const [isLoading, setIsLoading] = useState(false);\r\n//   const [selectedSkills, setSelectedSkills] = useState([]);\r\n//   const [searchMode, setSearchMode] = useState('all'); // 'all', 'name', 'skills'\r\n//   const searchInputRef = useRef(null);\r\n\r\n//   const commonSkills = [\r\n//     // Programming Languages\r\n//     'JavaScript', 'Python', 'Java', 'C#', 'C++', 'Go', 'Kotlin', 'Swift', 'TypeScript',\r\n    \r\n//     // Web Development\r\n//     'React', 'Node.js', 'Vue.js', 'Angular', 'Next.js', 'Full Stack Development', \r\n//     'Frontend Development', 'Backend Development', 'Web Development',\r\n    \r\n//     // Mobile Development\r\n//     'Mobile Development', 'React Native', 'iOS Development', 'Android Development', \r\n//     'Flutter', 'Cross-platform',\r\n    \r\n//     // AI & Machine Learning\r\n//     'Machine Learning', 'Artificial Intelligence', 'Deep Learning', 'Computer Vision',\r\n//     'Natural Language Processing', 'Neural Networks', 'TensorFlow', 'PyTorch',\r\n    \r\n//     // Data & Analytics\r\n//     'Data Science', 'Data Analysis', 'Big Data', 'Statistics', 'R Programming',\r\n//     'Data Engineering', 'Business Intelligence',\r\n    \r\n//     // Cloud & DevOps\r\n//     'Cloud Computing', 'AWS', 'Azure', 'Google Cloud Platform', 'DevOps', 'Docker',\r\n//     'Kubernetes', 'CI/CD', 'Infrastructure as Code',\r\n    \r\n//     // Database & Data\r\n//     'Database', 'Database Design', 'SQL', 'NoSQL', 'PostgreSQL', 'MongoDB', 'MySQL',\r\n//     'Data Modeling', 'ETL', 'Data Warehousing',\r\n    \r\n//     // Design & UX\r\n//     'UI/UX Design', 'UI/UX', 'Figma', 'Adobe Creative Suite', 'User Research',\r\n//     'Prototyping', 'Design Systems',\r\n    \r\n//     // Security & Emerging Tech\r\n//     'Cybersecurity', 'Network Security', 'Blockchain', 'Smart Contracts', 'Game Development',\r\n//     'Unity', 'Unreal Engine', 'Quantum Computing'\r\n//   ];\r\n\r\n//   useEffect(() => {\r\n//     if (isOpen && searchInputRef.current) {\r\n//       searchInputRef.current.focus();\r\n//     }\r\n//   }, [isOpen]);\r\n\r\n//   useEffect(() => {\r\n//     const performSearch = async () => {\r\n//       if (searchQuery.trim() || selectedSkills.length > 0) {\r\n//         setIsLoading(true);\r\n//         try {\r\n//           const params = new URLSearchParams();\r\n          \r\n//           // If search query is provided, treat it as a general search (name + skills)\r\n//           if (searchQuery.trim()) {\r\n//             params.append('query', searchQuery.trim());\r\n//           }\r\n          \r\n//           // Add selected skills as additional filters\r\n//           if (selectedSkills.length > 0) {\r\n//             params.append('skills', selectedSkills.join(','));\r\n//           }\r\n          \r\n//           const response = await fetch(`/api/mentors/search?${params}`);\r\n//           const data = await response.json();\r\n//           setSearchResults(data);\r\n//         } catch (error) {\r\n//           console.error('Search error:', error);\r\n//           setSearchResults([]);\r\n//         } finally {\r\n//           setIsLoading(false);\r\n//         }\r\n//       } else {\r\n//         setSearchResults([]);\r\n//       }\r\n//     };\r\n\r\n//     const debounceTimer = setTimeout(performSearch, 300);\r\n//     return () => clearTimeout(debounceTimer);\r\n//   }, [searchQuery, selectedSkills]);\r\n\r\n//   const handleSkillToggle = (skill) => {\r\n//     setSelectedSkills(prev => \r\n//       prev.includes(skill) \r\n//         ? prev.filter(s => s !== skill)\r\n//         : [...prev, skill]\r\n//     );\r\n//   };\r\n\r\n//   const handleSearchInputChange = (e) => {\r\n//     const value = e.target.value;\r\n//     setSearchQuery(value);\r\n    \r\n//     // Auto-detect if user is typing a skill name\r\n//     const isTypingSkill = commonSkills.some(skill => \r\n//       skill.toLowerCase().includes(value.toLowerCase())\r\n//     );\r\n    \r\n//     if (value.trim() && isTypingSkill) {\r\n//       setSearchMode('skills');\r\n//     } else if (value.trim()) {\r\n//       setSearchMode('all');\r\n//     }\r\n    \r\n//     // Clear results when clearing search\r\n//     if (!value.trim()) {\r\n//       setSearchResults([]);\r\n//     }\r\n//   };\r\n\r\n//   const handleResultClick = (mentor) => {\r\n//     onSearch(mentor);\r\n//     onClose();\r\n//   };\r\n\r\n//   const handleKeyDown = (e) => {\r\n//     if (e.key === 'Escape') {\r\n//       onClose();\r\n//     }\r\n//   };\r\n\r\n//   const clearSearch = () => {\r\n//     setSearchQuery('');\r\n//     setSelectedSkills([]);\r\n//     setSearchResults([]);\r\n//   };\r\n\r\n//   if (!isOpen) return null;\r\n\r\n//   return (\r\n//     <div className=\"fixed inset-0 bg-black bg-opacity-50 z-50 flex items-start justify-center pt-20\">\r\n//       <div className=\"bg-white rounded-lg shadow-2xl w-full max-w-4xl mx-4 max-h-[80vh] overflow-hidden\">\r\n//         {/* Search Header */}\r\n//         <div className=\"p-6 border-b border-gray-200\">\r\n//           <div className=\"flex items-center justify-between mb-4\">\r\n//             <h2 className=\"text-2xl font-bold text-gray-900\">Search Mentors</h2>\r\n//             <button\r\n//               onClick={onClose}\r\n//               className=\"p-2 hover:bg-gray-100 rounded-full transition-colors\"\r\n//             >\r\n//               <X className=\"w-6 h-6 text-gray-600\" />\r\n//             </button>\r\n//           </div>\r\n          \r\n//           {/* Search Input */}\r\n//           <div className=\"relative\">\r\n//             <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-5 h-5\" />\r\n//             <input\r\n//               ref={searchInputRef}\r\n//               type=\"text\"\r\n//               placeholder=\"Search mentors by name or skills (e.g., Machine Learning, React, Python)...\"\r\n//               value={searchQuery}\r\n//               onChange={handleSearchInputChange}\r\n//               onKeyDown={handleKeyDown}\r\n//               className=\"w-full pl-10 pr-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent text-lg\"\r\n//             />\r\n          \r\n//             {searchQuery && (\r\n//               <button\r\n//                 onClick={clearSearch}\r\n//                 className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-400 hover:text-gray-600\"\r\n//               >\r\n//                 <X className=\"w-4 h-4\" />\r\n//               </button>\r\n//             )}\r\n//           </div>\r\n          \r\n//           {/* Search Mode Indicator */}\r\n//           {searchQuery && (\r\n//             <div className=\"mt-2 flex items-center gap-2 text-sm text-gray-600\">\r\n//               <Filter className=\"w-4 h-4\" />\r\n//               <span>\r\n//                 {searchMode === 'skills' \r\n//                   ? `Searching for mentors with skills matching \"${searchQuery}\"`\r\n//                   : `Searching for mentors with name or skills matching \"${searchQuery}\"`\r\n//                 }\r\n//               </span>\r\n//             </div>\r\n//           )}\r\n//         </div>\r\n\r\n//         {/* Skills Filter */}\r\n//         <div className=\"p-6 border-b border-gray-200\">\r\n//           <div className=\"flex items-center justify-between mb-3\">\r\n//             <h3 className=\"text-lg font-semibold text-gray-900\">Quick Filter by Skills</h3>\r\n//             {selectedSkills.length > 0 && (\r\n//               <button\r\n//                 onClick={() => setSelectedSkills([])}\r\n//                 className=\"text-sm text-blue-600 hover:text-blue-800\"\r\n//               >\r\n//                 Clear all\r\n//               </button>\r\n//             )}\r\n//           </div>\r\n//           <div className=\"flex flex-wrap gap-2\">\r\n//             {commonSkills.map((skill) => (\r\n//               <button\r\n//                 key={skill}\r\n//                 onClick={() => handleSkillToggle(skill)}\r\n//                 className={`px-3 py-2 rounded-full text-sm font-medium transition-colors ${\r\n//                   selectedSkills.includes(skill)\r\n//                     ? 'bg-blue-600 text-white'\r\n//                     : 'bg-gray-100 text-gray-700 hover:bg-gray-200'\r\n//                 }`}\r\n//               >\r\n//                 {skill}\r\n//               </button>\r\n//             ))}\r\n//           </div>\r\n//         </div>\r\n\r\n//         {/* Search Results */}\r\n//         <div className=\"flex-1 overflow-y-auto p-6\">\r\n//           {isLoading ? (\r\n//             <div className=\"flex items-center justify-center py-8\">\r\n//               <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"></div>\r\n//             </div>\r\n//           ) : searchResults.length > 0 ? (\r\n//             <div className=\"space-y-4\">\r\n//               <div className=\"flex items-center justify-between\">\r\n//                 <h3 className=\"text-lg font-semibold text-gray-900\">\r\n//                   Found {searchResults.length} mentor(s)\r\n//                 </h3>\r\n//                 {(searchQuery || selectedSkills.length > 0) && (\r\n//                   <div className=\"text-sm text-gray-600\">\r\n//                     {searchQuery && <span>Search: \"{searchQuery}\"</span>}\r\n//                     {searchQuery && selectedSkills.length > 0 && <span> + </span>}\r\n//                     {selectedSkills.length > 0 && (\r\n//                       <span>Skills: {selectedSkills.join(', ')}</span>\r\n//                     )}\r\n//                   </div>\r\n//                 )}\r\n//               </div>\r\n//               {searchResults.map((mentor) => (\r\n//                 <div\r\n//                   key={mentor._id}\r\n//                   onClick={() => handleResultClick(mentor)}\r\n//                   className=\"p-4 border border-gray-200 rounded-lg hover:bg-gray-50 cursor-pointer transition-colors\"\r\n//                 >\r\n//                   <div className=\"flex items-start gap-4\">\r\n//                     <div className=\"w-12 h-12 bg-blue-100 rounded-full flex items-center justify-center flex-shrink-0\">\r\n//                       <User className=\"w-6 h-6 text-blue-600\" />\r\n//                     </div>\r\n//                     <div className=\"flex-1 min-w-0\">\r\n//                       <h4 className=\"text-lg font-semibold text-gray-900 mb-1\">\r\n//                         {mentor.name}\r\n//                       </h4>\r\n//                       <div className=\"flex items-center gap-4 text-sm text-gray-600 mb-2\">\r\n//                         <div className=\"flex items-center gap-1\">\r\n//                           <GraduationCap className=\"w-4 h-4\" />\r\n//                           {mentor.education}\r\n//                         </div>\r\n//                         <div className=\"flex items-center gap-1\">\r\n//                           <MapPin className=\"w-4 h-4\" />\r\n//                           {mentor.college}\r\n//                         </div>\r\n//                       </div>\r\n//                       <div className=\"flex flex-wrap gap-2\">\r\n//                         {mentor.areasOfProficiency.slice(0, 5).map((skill, index) => {\r\n//                           const isMatchingSkill = (searchQuery && skill.toLowerCase().includes(searchQuery.toLowerCase())) ||\r\n//                                                  selectedSkills.includes(skill);\r\n//                           return (\r\n//                             <span\r\n//                               key={index}\r\n//                               className={`px-2 py-1 text-xs rounded-full font-medium ${\r\n//                                 isMatchingSkill\r\n//                                   ? 'bg-green-100 text-green-800 border-2 border-green-300 shadow-sm'\r\n//                                   : 'bg-blue-100 text-blue-800'\r\n//                               }`}\r\n//                             >\r\n//                               {skill}\r\n//                               {isMatchingSkill && (\r\n//                                 <span className=\"ml-1 text-green-600\">✓</span>\r\n//                               )}\r\n//                             </span>\r\n//                           );\r\n//                         })}\r\n//                         {mentor.areasOfProficiency.length > 5 && (\r\n//                           <span className=\"px-2 py-1 bg-gray-100 text-gray-600 text-xs rounded-full\">\r\n//                             +{mentor.areasOfProficiency.length - 5} more\r\n//                           </span>\r\n//                         )}\r\n//                       </div>\r\n//                     </div>\r\n//                   </div>\r\n//                 </div>\r\n//               ))}\r\n//             </div>\r\n//           ) : (searchQuery.trim() || selectedSkills.length > 0) ? (\r\n//             <div className=\"text-center py-8\">\r\n//               <p className=\"text-gray-500 text-lg\">No mentors found matching your criteria</p>\r\n//               <p className=\"text-gray-400 text-sm mt-2\">\r\n//                 Try adjusting your search terms or skills. You can search by:\r\n//               </p>\r\n//               <ul className=\"text-gray-400 text-sm mt-2 space-y-1\">\r\n//                 <li>• Mentor names (e.g., \"Sarah\", \"Dr. Johnson\")</li>\r\n//                 <li>• Skills (e.g., \"Machine Learning\", \"React\", \"Python\")</li>\r\n//                 <li>• Use the skill filters below for more specific results</li>\r\n//               </ul>\r\n//             </div>\r\n//           ) : (\r\n//             <div className=\"text-center py-8\">\r\n//               <Search className=\"w-16 h-16 text-gray-300 mx-auto mb-4\" />\r\n//               <p className=\"text-gray-500 text-lg\">Start typing to search for mentors</p>\r\n//               <p className=\"text-gray-400 text-sm mt-2\">\r\n//                 Search by name, skills, or use the skill filters below\r\n//               </p>\r\n//               <div className=\"mt-4 p-4 bg-gray-50 rounded-lg max-w-md mx-auto\">\r\n//                 <p className=\"text-sm text-gray-600 mb-2\">Examples:</p>\r\n//                 <ul className=\"text-xs text-gray-500 space-y-1\">\r\n//                   <li>• Type \"Machine Learning\" to find ML experts</li>\r\n//                   <li>• Type \"React\" to find frontend developers</li>\r\n//                   <li>• Type \"Python\" to find Python developers</li>\r\n//                   <li>• Or click skill tags below for instant filtering</li>\r\n//                 </ul>\r\n//               </div>\r\n//             </div>\r\n//           )}\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default SearchBar;\r\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}