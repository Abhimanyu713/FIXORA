{"ast":null,"code":"// import React, { useEffect, useRef, useState } from \"react\";\n// import { Phone, ScreenShare, Mic, Video, VideoOff, MicOff } from \"lucide-react\";\n\n// const CallingPage = ({ caller = \"Alice\", callee = \"Bob\" }) => {\n//   const [micOn, setMicOn] = useState(true);\n//   const [videoOn, setVideoOn] = useState(true);\n//   const localVideoRef = useRef(null);\n//   const remoteRef = useRef(null);\n//   const [localStream, setLocalStream] = useState(null);\n\n//   const pc = useRef(null); // peer connection\n//   useEffect(() => {\n//     startCamera();\n//   }, []);\n\n//   const startCamera = async () => {\n//     try {\n//       const stream = await navigator.mediaDevices.getUserMedia({\n//         video: true,\n//         audio: true,\n//       });\n//       setLocalStream(stream);\n//       if (localVideoRef.current) {\n//         localVideoRef.current.srcObject = stream;\n//       }\n//     } catch (err) {\n//       console.error(\"Camera Access denied\", err);\n//     }\n//   };\n//       pc.current = new RTCPeerConnection();\n\n//       localStream.getTracks().forEach((track) => {\n//       pc.current.addTrack(track, localStream);\n//     });\n\n//   const styles = {\n//     container: {\n//       display: \"flex\",\n//       flexDirection: \"column\",\n//       alignItems: \"center\",\n//       justifyContent: \"center\",\n//       height: \"100vh\",\n//       backgroundColor: \"#111827\", // gray-900\n//       color: \"white\",\n//       padding: \"24px\",\n//     },\n//     header: {\n//       textAlign: \"center\",\n//       marginBottom: \"24px\",\n//     },\n//     title: {\n//       fontSize: \"24px\",\n//       fontWeight: \"bold\",\n//       marginBottom: \"8px\",\n//     },\n//     subtitle: {\n//       fontSize: \"18px\",\n//     },\n//     videoGrid: {\n//       display: \"grid\",\n//       gridTemplateColumns: \"1fr 1fr\",\n//       gap: \"16px\",\n//       marginBottom: \"24px\",\n//       width: \"100%\",\n//       maxWidth: \"800px\",\n//     },\n//     videoBox: {\n//       backgroundColor: \"#1f2937\", // gray-800\n//       borderRadius: \"16px\",\n//       display: \"flex\",\n//       alignItems: \"center\",\n//       justifyContent: \"center\",\n//       height: \"250px\",\n//       fontSize: \"16px\",\n//       color: \"#9ca3af\", // gray-400\n//       fontStyle: \"italic\",\n//     },\n//     controls: {\n//       display: \"flex\",\n//       gap: \"16px\",\n//     },\n//     button: {\n//       borderRadius: \"50%\",\n//       width: \"56px\",\n//       height: \"56px\",\n//       display: \"flex\",\n//       alignItems: \"center\",\n//       justifyContent: \"center\",\n//       cursor: \"pointer\",\n//       border: \"none\",\n//     },\n//     endCall: {\n//       backgroundColor: \"#dc2626\", // red-600\n//       color: \"white\",\n//     },\n//     secondary: {\n//       backgroundColor: \"#374151\", // gray-700\n//       color: \"white\",\n//     },\n//     outline: {\n//       backgroundColor: \"transparent\",\n//       border: \"2px solid #9ca3af\",\n//       color: \"white\",\n//     },\n//   };\n\n//   return (\n//     <div style={styles.container}>\n//       {/* Caller & Callee Info */}\n//       <div style={styles.header}>\n//         <h2 style={styles.title}>Ongoing Call</h2>\n//         <p style={styles.subtitle}>\n//           {caller} ðŸ“ž {callee}\n//         </p>\n//       </div>\n\n//       {/* Video placeholders */}\n//       <div style={styles.videoGrid}>\n//         <div style={styles.videoBox}>\n//           <video\n//             ref={localVideoRef}\n//             autoPlay\n//             playsInline\n//             muted\n//            style={{ width: \"300px\", background: \"#000\" }}\n//           />\n//         </div>\n//         <div style={styles.videoBox}>{`${callee}'s Video`}</div>\n//       </div>\n\n//       {/* Controls */}\n//       <div style={styles.controls}>\n//         <button style={{ ...styles.button, ...styles.endCall }}>\n//           <Phone />\n//         </button>\n\n//         <button\n//           onClick={() => setMicOn(!micOn)}\n//           style={{ ...styles.button, ...styles.secondary }}\n//         >\n//           {micOn ? <Mic /> : <MicOff />}\n//         </button>\n\n//         <button\n//           onClick={() => setVideoOn(!videoOn)}\n//           style={{ ...styles.button, ...styles.secondary }}\n//         >\n//           {videoOn ? <Video /> : <VideoOff />}\n//         </button>\n\n//         <button style={{ ...styles.button, ...styles.outline }}>\n//           <ScreenShare />\n//         </button>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default CallingPage;","map":{"version":3,"names":[],"sources":["C:/Users/manis/Desktop/startup/FIXORA/frontend/src/pages/CallingPage.jsx"],"sourcesContent":["// import React, { useEffect, useRef, useState } from \"react\";\r\n// import { Phone, ScreenShare, Mic, Video, VideoOff, MicOff } from \"lucide-react\";\r\n\r\n// const CallingPage = ({ caller = \"Alice\", callee = \"Bob\" }) => {\r\n//   const [micOn, setMicOn] = useState(true);\r\n//   const [videoOn, setVideoOn] = useState(true);\r\n//   const localVideoRef = useRef(null);\r\n//   const remoteRef = useRef(null);\r\n//   const [localStream, setLocalStream] = useState(null);\r\n\r\n//   const pc = useRef(null); // peer connection\r\n//   useEffect(() => {\r\n//     startCamera();\r\n//   }, []);\r\n\r\n//   const startCamera = async () => {\r\n//     try {\r\n//       const stream = await navigator.mediaDevices.getUserMedia({\r\n//         video: true,\r\n//         audio: true,\r\n//       });\r\n//       setLocalStream(stream);\r\n//       if (localVideoRef.current) {\r\n//         localVideoRef.current.srcObject = stream;\r\n//       }\r\n//     } catch (err) {\r\n//       console.error(\"Camera Access denied\", err);\r\n//     }\r\n//   };\r\n//       pc.current = new RTCPeerConnection();\r\n\r\n//       localStream.getTracks().forEach((track) => {\r\n//       pc.current.addTrack(track, localStream);\r\n//     });\r\n\r\n\r\n//   const styles = {\r\n//     container: {\r\n//       display: \"flex\",\r\n//       flexDirection: \"column\",\r\n//       alignItems: \"center\",\r\n//       justifyContent: \"center\",\r\n//       height: \"100vh\",\r\n//       backgroundColor: \"#111827\", // gray-900\r\n//       color: \"white\",\r\n//       padding: \"24px\",\r\n//     },\r\n//     header: {\r\n//       textAlign: \"center\",\r\n//       marginBottom: \"24px\",\r\n//     },\r\n//     title: {\r\n//       fontSize: \"24px\",\r\n//       fontWeight: \"bold\",\r\n//       marginBottom: \"8px\",\r\n//     },\r\n//     subtitle: {\r\n//       fontSize: \"18px\",\r\n//     },\r\n//     videoGrid: {\r\n//       display: \"grid\",\r\n//       gridTemplateColumns: \"1fr 1fr\",\r\n//       gap: \"16px\",\r\n//       marginBottom: \"24px\",\r\n//       width: \"100%\",\r\n//       maxWidth: \"800px\",\r\n//     },\r\n//     videoBox: {\r\n//       backgroundColor: \"#1f2937\", // gray-800\r\n//       borderRadius: \"16px\",\r\n//       display: \"flex\",\r\n//       alignItems: \"center\",\r\n//       justifyContent: \"center\",\r\n//       height: \"250px\",\r\n//       fontSize: \"16px\",\r\n//       color: \"#9ca3af\", // gray-400\r\n//       fontStyle: \"italic\",\r\n//     },\r\n//     controls: {\r\n//       display: \"flex\",\r\n//       gap: \"16px\",\r\n//     },\r\n//     button: {\r\n//       borderRadius: \"50%\",\r\n//       width: \"56px\",\r\n//       height: \"56px\",\r\n//       display: \"flex\",\r\n//       alignItems: \"center\",\r\n//       justifyContent: \"center\",\r\n//       cursor: \"pointer\",\r\n//       border: \"none\",\r\n//     },\r\n//     endCall: {\r\n//       backgroundColor: \"#dc2626\", // red-600\r\n//       color: \"white\",\r\n//     },\r\n//     secondary: {\r\n//       backgroundColor: \"#374151\", // gray-700\r\n//       color: \"white\",\r\n//     },\r\n//     outline: {\r\n//       backgroundColor: \"transparent\",\r\n//       border: \"2px solid #9ca3af\",\r\n//       color: \"white\",\r\n//     },\r\n//   };\r\n\r\n//   return (\r\n//     <div style={styles.container}>\r\n//       {/* Caller & Callee Info */}\r\n//       <div style={styles.header}>\r\n//         <h2 style={styles.title}>Ongoing Call</h2>\r\n//         <p style={styles.subtitle}>\r\n//           {caller} ðŸ“ž {callee}\r\n//         </p>\r\n//       </div>\r\n\r\n//       {/* Video placeholders */}\r\n//       <div style={styles.videoGrid}>\r\n//         <div style={styles.videoBox}>\r\n//           <video\r\n//             ref={localVideoRef}\r\n//             autoPlay\r\n//             playsInline\r\n//             muted\r\n//            style={{ width: \"300px\", background: \"#000\" }}\r\n//           />\r\n//         </div>\r\n//         <div style={styles.videoBox}>{`${callee}'s Video`}</div>\r\n//       </div>\r\n\r\n//       {/* Controls */}\r\n//       <div style={styles.controls}>\r\n//         <button style={{ ...styles.button, ...styles.endCall }}>\r\n//           <Phone />\r\n//         </button>\r\n\r\n//         <button\r\n//           onClick={() => setMicOn(!micOn)}\r\n//           style={{ ...styles.button, ...styles.secondary }}\r\n//         >\r\n//           {micOn ? <Mic /> : <MicOff />}\r\n//         </button>\r\n\r\n//         <button\r\n//           onClick={() => setVideoOn(!videoOn)}\r\n//           style={{ ...styles.button, ...styles.secondary }}\r\n//         >\r\n//           {videoOn ? <Video /> : <VideoOff />}\r\n//         </button>\r\n\r\n//         <button style={{ ...styles.button, ...styles.outline }}>\r\n//           <ScreenShare />\r\n//         </button>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default CallingPage;\r\n"],"mappings":"AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}