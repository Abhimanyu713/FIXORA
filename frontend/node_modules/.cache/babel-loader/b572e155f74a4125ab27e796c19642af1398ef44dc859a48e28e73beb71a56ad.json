{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\manis\\\\Desktop\\\\startup\\\\FIXORA\\\\frontend\\\\src\\\\config\\\\WebRTC\\\\signallingServer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WebRTC = () => {\n  _s();\n  const localVideoRef = useRef(null);\n  const remoteVideoRef = useRef(null);\n  const pc = useRef(null); // peer connection\n  const [localStream, setLocalStream] = useState(null);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    startCamera();\n  }, []);\n\n  // 1. Get camera + mic\n  const startCamera = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        video: true,\n        audio: true\n      });\n      setLocalStream(stream);\n      if (localVideoRef.current) {\n        localVideoRef.current.srcObject = stream;\n      }\n      setError(null); // reset error if retry works\n    } catch (err) {\n      console.error(\"Camera access denied:\", err);\n      setError(\"Camera/Mic access denied. Please enable permissions.\");\n    }\n  };\n\n  // 2. Create PeerConnection\n  const createPeerConnection = () => {\n    if (!localStream) {\n      alert(\"Start the camera first!\");\n      return;\n    }\n    pc.current = new RTCPeerConnection();\n\n    // send local tracks\n    localStream.getTracks().forEach(track => {\n      pc.current.addTrack(track, localStream);\n    });\n\n    // when remote stream arrives\n    pc.current.ontrack = event => {\n      if (remoteVideoRef.current) {\n        remoteVideoRef.current.srcObject = event.streams[0];\n      }\n    };\n  };\n\n  // 3. Create Offer\n  const createOffer = async () => {\n    createPeerConnection();\n    const offer = await pc.current.createOffer();\n    await pc.current.setLocalDescription(offer);\n    console.log(\"Offer SDP:\", offer);\n  };\n\n  // 4. Create Answer\n  const createAnswer = async offer => {\n    createPeerConnection();\n    await pc.current.setRemoteDescription(new RTCSessionDescription(offer));\n    const answer = await pc.current.createAnswer();\n    await pc.current.setLocalDescription(answer);\n    console.log(\"Answer SDP:\", answer);\n  };\n\n  // 5. Add remote answer from peer\n  const addAnswer = async answer => {\n    if (!pc.current.currentRemoteDescription) {\n      await pc.current.setRemoteDescription(new RTCSessionDescription(answer));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"React WebRTC Demo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startCamera,\n      children: \"Retry Camera\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: createOffer,\n      children: \"Create Offer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        gap: \"20px\",\n        marginTop: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"video\", {\n        ref: localVideoRef,\n        autoPlay: true,\n        playsInline: true,\n        muted: true,\n        style: {\n          width: \"300px\",\n          background: \"#000\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n        ref: remoteVideoRef,\n        autoPlay: true,\n        playsInline: true,\n        style: {\n          width: \"300px\",\n          background: \"#000\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n_s(WebRTC, \"0J0074vxPEhzSNnYPY3pW5k6F68=\");\n_c = WebRTC;\nexport default WebRTC;\nvar _c;\n$RefreshReg$(_c, \"WebRTC\");","map":{"version":3,"names":["React","useEffect","useRef","useState","jsxDEV","_jsxDEV","WebRTC","_s","localVideoRef","remoteVideoRef","pc","localStream","setLocalStream","error","setError","startCamera","stream","navigator","mediaDevices","getUserMedia","video","audio","current","srcObject","err","console","createPeerConnection","alert","RTCPeerConnection","getTracks","forEach","track","addTrack","ontrack","event","streams","createOffer","offer","setLocalDescription","log","createAnswer","setRemoteDescription","RTCSessionDescription","answer","addAnswer","currentRemoteDescription","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","onClick","display","gap","marginTop","ref","autoPlay","playsInline","muted","width","background","_c","$RefreshReg$"],"sources":["C:/Users/manis/Desktop/startup/FIXORA/frontend/src/config/WebRTC/signallingServer.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\n\r\nconst WebRTC = () => {\r\n  const localVideoRef = useRef(null);\r\n  const remoteVideoRef = useRef(null);\r\n  const pc = useRef(null); // peer connection\r\n  const [localStream, setLocalStream] = useState(null);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    startCamera();\r\n  }, []);\r\n\r\n  // 1. Get camera + mic\r\n  const startCamera = async () => {\r\n    try {\r\n      const stream = await navigator.mediaDevices.getUserMedia({\r\n        video: true,\r\n        audio: true,\r\n      });\r\n      setLocalStream(stream);\r\n      if (localVideoRef.current) {\r\n        localVideoRef.current.srcObject = stream;\r\n      }\r\n      setError(null); // reset error if retry works\r\n    } catch (err) {\r\n      console.error(\"Camera access denied:\", err);\r\n      setError(\"Camera/Mic access denied. Please enable permissions.\");\r\n    }\r\n  };\r\n\r\n  // 2. Create PeerConnection\r\n  const createPeerConnection = () => {\r\n    if (!localStream) {\r\n      alert(\"Start the camera first!\");\r\n      return;\r\n    }\r\n\r\n    pc.current = new RTCPeerConnection();\r\n\r\n    // send local tracks\r\n    localStream.getTracks().forEach((track) => {\r\n      pc.current.addTrack(track, localStream);\r\n    });\r\n\r\n    // when remote stream arrives\r\n    pc.current.ontrack = (event) => {\r\n      if (remoteVideoRef.current) {\r\n        remoteVideoRef.current.srcObject = event.streams[0];\r\n      }\r\n    };\r\n  };\r\n\r\n  // 3. Create Offer\r\n  const createOffer = async () => {\r\n    createPeerConnection();\r\n\r\n    const offer = await pc.current.createOffer();\r\n    await pc.current.setLocalDescription(offer);\r\n\r\n    console.log(\"Offer SDP:\", offer);\r\n  };\r\n\r\n  // 4. Create Answer\r\n  const createAnswer = async (offer) => {\r\n    createPeerConnection();\r\n\r\n    await pc.current.setRemoteDescription(new RTCSessionDescription(offer));\r\n    const answer = await pc.current.createAnswer();\r\n    await pc.current.setLocalDescription(answer);\r\n\r\n    console.log(\"Answer SDP:\", answer);\r\n  };\r\n\r\n  // 5. Add remote answer from peer\r\n  const addAnswer = async (answer) => {\r\n    if (!pc.current.currentRemoteDescription) {\r\n      await pc.current.setRemoteDescription(new RTCSessionDescription(answer));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>React WebRTC Demo</h2>\r\n      {error && <p style={{ color: \"red\" }}>{error}</p>}\r\n      <button onClick={startCamera}>Retry Camera</button>\r\n      <button onClick={createOffer}>Create Offer</button>\r\n\r\n      <div style={{ display: \"flex\", gap: \"20px\", marginTop: \"20px\" }}>\r\n        <video\r\n          ref={localVideoRef}\r\n          autoPlay\r\n          playsInline\r\n          muted\r\n          style={{ width: \"300px\", background: \"#000\" }}\r\n        />\r\n        <video\r\n          ref={remoteVideoRef}\r\n          autoPlay\r\n          playsInline\r\n          style={{ width: \"300px\", background: \"#000\" }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WebRTC;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}